	Mauricio S. Perez
	CSC18a - 48984
	Proffesor Paul J. Conrad
	Assignment 8: Six New Date Methods. 

	Problem: Take our Date class that we created
			 Add six new methods named: 

		- nextDay
		- previousDay
		- nextMonth
		- previousMonth
		- nextYear
		- previousYear.

	Write Up:
    
    In this Problem we had to create 6 classes, each dealing with manipulating
    an existing date in an element, each with its own set of input validation.
    
    nextDay, previousDay, nextMonth, previousMonth, nextYear, previousYear.
    Each has its own special cases where Leap Years or Incremented Months affect
    more than just the desiered element change. (See Comments for specific 
    validation checks and changes). 
    
    For the most part, each of theise classes change one element, but when 
    special cases occure, like 1/30/2004 incrementing a year, we see that we
    must also change the month and the date for their is no 2/30/2004. The cases
    in constant question were the dates 2/28/(Leap Year), jumping from the last 
    day of the year to the first day of the next year and vice versa, changing 
    dates from months with 30 days to 31 & vice a versa. The input validation 
    was not as bad once you found the cases.
    
    What I learned:
    It pays off to be neet in the long run. Once I broke down all the special 
    test cases, each of the date change classes wrote themselves. I only wish I
    had implemented a user input date change, when I would not need to change 
    the main file each time i wanted to check the classes for functionality.
    
    PS:
    I think their is a new due date for this assignment. I will implement that
    feature in the add on portion of the assignment.